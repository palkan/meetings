<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for the Spark Button component.  

       @see spark.components.Button
        
      @langversion 3.0
      @playerversion Flash 10
      @playerversion AIR 1.5
      @productversion Flex 4
-->
<s:SparkButtonSkin xmlns:fx="http://ns.adobe.com/mxml/2009" 
             xmlns:s="library://ns.adobe.com/flex/spark" 
             xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
             minWidth="21" minHeight="21" 
             alpha.disabled="0.5">
     
    <fx:Metadata>
        <![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.Button")]
        ]]>
    </fx:Metadata>
    
    <fx:Script fb:purpose="styling">
        <![CDATA[
        import ru.teachbase.utils.shortcuts.style;
        import ru.teachbase.utils.shortcuts.style;
        import ru.teachbase.utils.shortcuts.style;
        import ru.teachbase.utils.shortcuts.style;
        import ru.teachbase.utils.shortcuts.style;
        import ru.teachbase.utils.shortcuts.style;
        import ru.teachbase.utils.shortcuts.style;
        import ru.teachbase.utils.shortcuts.style;
        import ru.teachbase.utils.shortcuts.style;
        import ru.teachbase.utils.shortcuts.style;
        import ru.teachbase.utils.shortcuts.style;
        import ru.teachbase.utils.shortcuts.style;
        import ru.teachbase.utils.shortcuts.style;

        static private const exclusions:Array = ["labelDisplay"];

        /**
         * @private
         */
        override public function get colorizeExclusions():Array {
            return exclusions;
        }

        /**
         * @private
         */
        override protected function initializationComplete():void {
            super.initializationComplete();
        }
        ]]>        
    </fx:Script>
        
    <!-- states -->
    <s:states>
        <s:State name="up" />
        <s:State name="over" />
        <s:State name="down" />
        <s:State name="disabled" />
    </s:states>
    
      
    
    <!-- layer 1: fill -->
    <!--- @private -->
	<s:HGroup width="100%" top="0" left="0" right="0" height="30" gap="0" includeIn="up">
		<s:BitmapImage source="{style('screenshare','stop_btn_left')}" height="30" width="3"/>
		<s:Image id="upImg" initialize="upImg.source=style('screenshare','stop_btn_back')"  scaleMode="stretch" height="30" width="100%"/>
		<s:BitmapImage source="{style('screenshare','stop_btn_right')}" height="30" width="3"/>
	</s:HGroup>

    
    <!-- layer 2: fill highlight -->
    <!--- @private -->
	<s:HGroup width="100%" top="0" left="0" right="0" height="30" gap="0" excludeFrom="up">
		<s:BitmapImage source="{style('screenshare','stop_btn_left_hover')}" height="30" width="3"/>
		<s:Image id="hoverImg" initialize="hoverImg.source=style('screenshare','stop_btn_back_hover')"  scaleMode="stretch" height="30" width="100%"/>
		<s:BitmapImage source="{style('screenshare','stop_btn_right_hover')}" height="30" width="3"/>
	</s:HGroup>
    
   
    
    <!-- layer 3: text -->
    <!--- @copy spark.components.supportClasses.ButtonBase#labelDisplay  -->
    <s:Label id="labelDisplay"
             textAlign="center"
             maxDisplayedLines="1"
			 color="0xFFFFFF"
             horizontalCenter="0" verticalCenter="0" verticalAlign="middle"
             left="10" right="10" top="2" bottom="2">
    </s:Label>
    
</s:SparkButtonSkin>
