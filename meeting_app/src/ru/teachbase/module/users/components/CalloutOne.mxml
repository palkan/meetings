<?xml version="1.0" encoding="utf-8"?>
<components:TempCallout xmlns:fx="http://ns.adobe.com/mxml/2009"
                        xmlns:s="library://ns.adobe.com/flex/spark"
                        width="100%" height="100%"
                        xmlns:components="ru.teachbase.components.*"
                        implements="ru.teachbase.utils.interfaces.ILocalable"
                        verticalPosition="after" horizontalPosition="end"
                        skinClass="ru.teachbase.skins.CalloutSkinAS"
                        initialize="Localizer.addItem(this);"
                        backgroundColor="0x000000" backgroundAlpha="0.9" contentBackgroundAlpha="0"
                        addedToStage="onAddedTostage()">
    <components:layout>
		<s:VerticalLayout gap="0"/>
	</components:layout>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
        import ru.teachbase.core.App;
        import ru.teachbase.events.GlobalEvent;
        import ru.teachbase.manage.RoomModelManager;
        import ru.teachbase.manage.SessionManager;
        import ru.teachbase.manage.SessionManager;
        import ru.teachbase.model.User;
        import ru.teachbase.model.constants.UserRoles;
        import ru.teachbase.utils.Localizer;
        import ru.teachbase.utils.shortcuts.translate;
        import ru.teachbase.utils.shortcuts.translate;
        import ru.teachbase.utils.shortcuts.translate;
        import ru.teachbase.utils.shortcuts.translate;
        import ru.teachbase.utils.shortcuts.translate;
        import ru.teachbase.utils.shortcuts.translate;
        import ru.teachbase.utils.shortcuts.translate;
        import ru.teachbase.utils.shortcuts.translate;
        import ru.teachbase.utils.helpers.m;
        import ru.teachbase.utils.shortcuts.style;

        private var _user:User;

        private var _setRoleLabel:String;

        private function onAddedTostage():void {
            currentState = normal.name;
        }

        public function set user(value:User):void {
            _user = value;
        }

        private function changeRole():void {
            if (_user.role == UserRoles.ADMIN) {
                (m(SessionManager) as SessionManager).setUserRole(_user.sid, "user");
            } else {
                (m(SessionManager) as SessionManager).setUserRole(_user.sid, "admin");
            }
            close();
        }


        public function localize():void {

            deleteUser && (deleteUser.label = translate('Delete'));
            if (_user.role == UserRoles.ADMIN) {
                setRole.label = translate('set_user', 'users');
            } else {
                setRole.label = translate('set_admin', 'users');
            }
            delBut && (delBut.label = translate('Delete'));
            cancelBut && (cancelBut.label = translate('Cancel'));
            main_text && (main_text.text = translate('are_you_sure_delete', 'users', _user.fullName));

        }

        protected function startPrivateChat(event:MouseEvent):void {
            GlobalEvent.dispatch(GlobalEvent.START_PRIVATE_CHAT, _user.sid);
            close();
        }
        ]]>
	</fx:Script>
	<components:states>
		<s:State id="normal" name="normal"/>
		<s:State id="deleteConfirmation" name="deleteConfirmation" />
	</components:states>

	<s:Group id="mainGroup" width="100%" height="100%">
			
		<s:VGroup gap="0" includeIn="normal" height="100%">
			<s:Button id="setRole" fontSize="11" click="changeRole()" skinClass="ru.teachbase.skins.CalloutButtonSkin" 
					  initialize="(_user.role === UserRoles.ADMIN) ? setRole.label = translate('set_user','users') : setRole.label = translate('set_admin','users'); setRole.includeInLayout=App.room.user.role == 'admin'"/>
			<s:Button id="startPC" fontSize="11" skinClass="ru.teachbase.skins.CalloutButtonSkin" 
					  initialize="startPC.label=translate('start_private','users');" click="startPrivateChat(event)"/>
			<s:Button id="deleteUser" fontSize="11" skinClass="ru.teachbase.skins.CalloutButtonSkin" 
					  initialize="deleteUser.label=translate('Delete'); deleteUser.includeInLayout=App.room.user.role == 'admin'" click="{currentState = deleteConfirmation.name;}"/>
		</s:VGroup>
		<s:VGroup  gap="4" width="100%" height="100%" top="10" left="10" right="10" bottom="10" includeIn="deleteConfirmation">
			<s:Label id="main_text" color="0xE8E8E8" fontSize="12" width="200" initialize="main_text.text=translate('are_you_sure_delete','users',_user.fullName)"/>
			<s:HGroup width="100%" gap="20">
				<components:CustomSkinableButton width="77" height="22"  color='0xE8E8E8'
												 id="delBut"
												 skinClass="ru.teachbase.skins.CustomSkiningButtonSkin"
												 initialize="with(delBut){label=translate('Delete');iconUp=ru.teachbase.utils.helpers.style('users','deleteUserOkBg');iconOver=ru.teachbase.utils.helpers.style('users','deleteUserOkBgHover');}"
												 click="(m(SessionManager) as SessionManager).setUserRole(_user.sid, 'disconnect');close();"/>
				<components:CustomSkinableButton width="86" height="22"  color='0xE8E8E8'
												 id="cancelBut"
												 skinClass="ru.teachbase.skins.CustomSkiningButtonSkin"
												 initialize="with(cancelBut){label=translate('Cancel');iconUp=ru.teachbase.utils.helpers.style('users','deleteUserCancelBg');iconOver=ru.teachbase.utils.helpers.style('users','deleteUserCancelBgHover');}"
												 click="close()"/>
			</s:HGroup>
		</s:VGroup>
	</s:Group>
	
</components:TempCallout>
