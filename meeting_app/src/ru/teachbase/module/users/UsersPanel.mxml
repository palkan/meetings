<?xml version="1.0" encoding="utf-8"?>
<module:ModuleInstance xmlns:fx="http://ns.adobe.com/mxml/2009"
                       xmlns:s="library://ns.adobe.com/flex/spark"
                       xmlns:module="ru.teachbase.components.module.*"
                       xmlns:components="ru.teachbase.components.*"
                       implements="ru.teachbase.utils.interfaces.ILocalable"
                       initialize="label=translate('label','users');Localizer.addItem(this);"
                       xmlns:components1="ru.teachbase.module.users.components.*"
                       creationComplete="creationCompleteHandler(event)"
        >
    <fx:Declarations>
    </fx:Declarations>

    <fx:Script>
		<![CDATA[
        import mx.collections.ArrayCollection;
        import mx.events.CollectionEvent;

        import ru.teachbase.components.callouts.SettingsItem;
        import ru.teachbase.model.App;
        import ru.teachbase.model.User;
        import ru.teachbase.utils.Localizer;
        import ru.teachbase.utils.shortcuts.translate;

        private function creationCompleteHandler(e:Event):void {

            App.meeting.usersList.addEventListener(CollectionEvent.COLLECTION_CHANGE, usersUpdateHandler);

            usersUpdateHandler();

        }


        protected function usersUpdateHandler(e:CollectionEvent = null):void {

            const compared:Array = App.meeting.usersList.source.sort(compare);

            ownersList.dataProvider = new ArrayCollection(compared.filter(filterAdmin));
            usersList.dataProvider = new ArrayCollection(compared.filter(filterUser));

        }


        private function filterUser(user:User, index:int = 0, arr:Array = null):Boolean {
            return !user.isAdmin();
        }

        private function filterAdmin(user:User, index:int = 0, arr:Array = null):Boolean {
            return user.isAdmin();
        }


        internal function clear():void {
            ownersList.dataProvider = null;
            usersList.dataProvider = null;
        }

        public function localize():void {
            label = translate('label', 'users');
            ownersList && (ownersList.label = translate('admins', 'users'));
            usersList && (usersList.label = translate('users', 'users'));
        }


        private function compare(a:User, b:User, arr:Array = null):int {
            if (a.iam)
                return -1;

            if (b.iam)
                return 1;

            if (App.user.isAdmin() && (a.requestStatus - b.requestStatus) != 0)
                return (a.requestStatus > b.requestStatus) ? -1 : 1;

            if (a.fullName === b.fullName)
                return (a.suffix > b.suffix) ? 1 : -1;

            return (a.fullName > b.fullName) ? 1 : -1;
        }


        override public function get settings():Vector.<SettingsItem> {
            return (ownerModule as UsersModule).settings;
        }
        ]]>
	</fx:Script>
    <components:HidingScroller width="100%" height="100%" horizontalScrollPolicy="off">
        <s:VGroup id="usersVerticalGroup" verticalAlign="top" width="100%" gap="0">
            <components1:VerticalExpandedListElement id="ownersList" width="100%"
                                                     initialize="ownersList.label = translate('admins','users');"/>

            <components1:VerticalExpandedListElement id="usersList"
                                                     width="100%"
                                                     initialize="usersList.label=translate('users','users');"
                    />

        </s:VGroup>
    </components:HidingScroller>
</module:ModuleInstance>
