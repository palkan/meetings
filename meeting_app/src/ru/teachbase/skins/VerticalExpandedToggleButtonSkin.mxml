<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for a Spark ToggleButton component.  

     @see spark.components.ToggleButton
        
      @langversion 3.0
      @playerversion Flash 10
      @playerversion AIR 1.5
      @productversion Flex 4
-->
<s:SparkButtonSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
                   xmlns:s="library://ns.adobe.com/flex/spark"
                   minWidth="21" minHeight="21" height="25" width="100%"
                   alpha.disabledStates="0.5" xmlns:mx="library://ns.adobe.com/flex/mx">

    <!-- host component -->
    <fx:Metadata>
    <![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.ToggleButton")]
    ]]>
    </fx:Metadata>
	<fx:Script>
		<![CDATA[
        import ru.teachbase.utils.helpers.*;
        import ru.teachbase.utils.shortcuts.style;
        import ru.teachbase.utils.shortcuts.style;
        import ru.teachbase.utils.shortcuts.style;
        import ru.teachbase.utils.shortcuts.style;
        import ru.teachbase.utils.shortcuts.style;
        import ru.teachbase.utils.shortcuts.style;

        override public function setCurrentState(stateName:String, playTransition:Boolean = true):void {
            super.setCurrentState(stateName, playTransition);
            var _color:Number = 0x515151;
            if (stateName == 'upAndSelected' || stateName == 'overAndSelected' || stateName == 'downAndSelected' || stateName == 'disabledAndSelected') {
                _color = 0x515151;
            } else {
                _color = 0x2A5C81;
            }

            if (labelDisplay != null) {
                Label(labelDisplay).setStyle('color', _color);
            }

        }
        ]]>
	</fx:Script>
    
    <!-- states -->
    <s:states>
        <s:State name="up" />
        <s:State name="over" stateGroups="overStates" />
        <s:State name="down" stateGroups="downStates" />
        <s:State name="disabled" stateGroups="disabledStates" />
        <s:State name="upAndSelected" stateGroups="selectedStates, selectedUpStates" />
        <s:State name="overAndSelected" stateGroups="overStates, selectedStates" />
        <s:State name="downAndSelected" stateGroups="downStates, selectedStates" />
        <s:State name="disabledAndSelected" stateGroups="selectedUpStates, disabledStates, selectedStates" />
    </s:states>
    
 	<s:BitmapImage scaleMode="stretch" width="100%" height="25" source="{style('users','toggleButtonBg')}" />
 	<s:BitmapImage left="10" top="7" width="11" height="11" source="{style('users','toggleClosed')}" includeIn="up, over, disabled" />
 	<s:BitmapImage left="10" top="7" width="11" height="11" source="{style('users','toggleOppend')}" includeIn="down, upAndSelected, overAndSelected, downAndSelected, disabledAndSelected" />

    <s:Label id="labelDisplay"
             textAlign="left"
             verticalAlign="middle"
             maxDisplayedLines="1" 
             horizontalCenter="0" verticalCenter="1"
			 fontSize="13"
             left="37" right="10" top="2" bottom="2"  >
		<s:filters>
			<mx:DropShadowFilter angle="117" distance=".1" color="0xFFFFFF"/>

		</s:filters>
    </s:Label>
    
</s:SparkButtonSkin>
