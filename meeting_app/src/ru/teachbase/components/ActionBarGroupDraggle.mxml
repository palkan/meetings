<?xml version="1.0" encoding="utf-8"?>
<c:ActionBarGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
                  xmlns:s="library://ns.adobe.com/flex/spark"
                  xmlns:c="ru.teachbase.components.*"
                  xmlns:dragdrop="ru.teachbase.behaviours.dragdrop.*"
                  implements="ru.teachbase.behaviours.IDraggle"

                  alpha.static="1"
                  alpha.drag="0.5"
                  currentState="{drag.state}"
                  color="{0xFFFFFF * Math.random()}"
        >
    <fx:Script>
		<![CDATA[
        import caurina.transitions.Tweener;

        import mx.core.IVisualElementContainer;

        import ru.teachbase.behaviours.DragDirection;
        import ru.teachbase.behaviours.dragdrop.DragDirection;
        import ru.teachbase.behaviours.dragdrop.DragEvent;

        //public static const DRAG_STATE_PREFIX:String = "drag";

        [Bindable]
        public var dropSpace:IDragCoordinateSpace;

        [Bindable]
        public var animation:Boolean = true;

        private var myIndexOnDragStart:int = -1;

        private function dragPrepareHandler(e:DragEvent):void {
            currentState = dragPreparing.name;
        }

        private function dragStartHandler(e:DragEvent):void {
            currentState = dragging.name;
        }

        private function dragEndHandler(e:DragEvent):void {
            // restore index:
            if (myIndexOnDragStart !== -1) {
                const parentSpark:IVisualElementContainer = parent as IVisualElementContainer;
                parentSpark.addElementAt(this, myIndexOnDragStart);
                myIndexOnDragStart = -1;
            }
            currentState = normal.name;
        }

        //---- implementation
        public function getSnapshot():DraggleSnapshot {
            return null;
        }

        public function get dragBehavior():DragBehavior {
            return drag;
        }

        public function get dragState():String {
            return currentState;
        }


        override public function move(x:Number, y:Number):void {
            if (int(x) !== int(this.x) || int(y) !== int(this.y))
                Tweener.addTween(this, {x: x, y: y, time: .08, transition: "linear"});
            else
                super.move(x, y);
        }
        ]]>
	</fx:Script>
    <fx:Declarations>
        <dragdrop:DragBehavior id="drag"
                               target="{this}"
                               direction="{DragDirection.HORIZONTAL}"
                               startDirection="{DragDirection.HORIZONTAL}"
                               mouseCoordinateSpace="{this.parentApplication}"
                               bounds="{dropSpace}"
                               dragPrepare="dragPrepareHandler(event)"
                               dragStart="dragStartHandler(event)"
                               dragEnd="dragEndHandler(event)"
                />
    </fx:Declarations>
    <c:layout>
        <s:HorizontalLayout gap="1"/>
    </c:layout>
    <c:states>
        <s:State id="normal" name="static"/>
        <s:State id="dragging" name="dragging" stateGroups="drag"/>
        <s:State id="dragPreparing" name="preparing" stateGroups="drag"/>
    </c:states>
</c:ActionBarGroup>
