<?xml version="1.0" encoding="utf-8"?>
<components:CustomSkinableButton xmlns:fx="http://ns.adobe.com/mxml/2009"
                                 implements="ru.teachbase.components.board.IWBComponent"
                                 skinClass="ru.teachbase.skins.CustomSkinableButtonSkin"
                                 xmlns:components="ru.teachbase.components.*"

        >

    <fx:Metadata>
        [Event(name="property", type="ru.teachbase.components.board.WhiteBoardEvent")]
        [Event(name="tool", type="ru.teachbase.components.board.WhiteBoardEvent")]
    </fx:Metadata>
	
		
	
	<fx:Script>
		<![CDATA[
        import ru.teachbase.components.board.WhiteBoardEvent;

        private var _type:String = "tool";
        private var _propertyId:String = '';
        private var _value:*;
        private var _active:Boolean = false;
        private var _props:Vector.<String>;
        private var _propsValue:Array;


        protected function onClick(event:MouseEvent):void {
            dispatchEvent(new WhiteBoardEvent(this.type, this.value, null, this.propertyId));
        }

        public function get type():String {

            return _type;
        }

        public function set type(value:String):void {
            _type = value;

            if (value != "")
                this.addEventListener(MouseEvent.CLICK, onClick);
            else
                this.removeEventListener(MouseEvent.CLICK, onClick);

        }

        public function get value():* {
            return _value;
        }

        public function set value(value:*):void {
            _value = value;
        }

        public function get active():Boolean {
            return _active;
        }

        public function set active(value:Boolean):void {
            _active = value;
        }

        public function get props():Vector.<String> {
            return _props;
        }

        public function set props(value:Vector.<String>):void {
            _props = value;
        }

        public function get propsValue():Array {
            return _propsValue;
        }

        public function set propsValue(value:Array):void {
            _propsValue = value;
        }

        public function get propertyId():String {
            return _propertyId;
        }

        public function set propertyId(value:String):void {
            _propertyId = value;
        }
        ]]>
	</fx:Script>
</components:CustomSkinableButton>
