<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
                xmlns:s="library://ns.adobe.com/flex/spark"
                autoDrawBackground="false" width="237" height="64"
                xmlns:components="ru.teachbase.components.*"
                contentBackgroundAlpha="0">

	<fx:Script>
		<![CDATA[
        import ru.teachbase.utils.shortcuts.style;

        import spark.components.List;

        [Bindable]
        private var _notification:Notification;

        [Bindable]
        private var _hasControls:Boolean = false;

        private var _timer:Timer = new Timer(5000, 1);

        override public function set data(value:Object):void {
            super.data = value;
            if (!value) {
                return;
            }

            _notification = value as Notification;

            _hasControls = Boolean(_notification.submitFunction);


            _timer.addEventListener(TimerEvent.TIMER_COMPLETE, onTimerComplete);
            _timer.start();

        }

        private function onTimerComplete(evt:Event):void {
            _timer.removeEventListener(TimerEvent.TIMER_COMPLETE, onTimerComplete);
            deleteMe();
        }

        private function deleteMe():void {
            if (!data) {
                return;
            }
            var parentList:List = owner as List;
            parentList.dataProvider.removeItemAt(parentList.dataProvider.getItemIndex(data));
        }
        ]]>
	</fx:Script>
	<s:Rect width="100%" height="100%" x="0" y="0">
		<s:fill>
			<s:SolidColor color="0x353535" alpha="0.8"/>
		</s:fill>
	</s:Rect>
	<s:BitmapImage id="icon" top="4" left="4" source="{_notification.icon}"/>
	<s:BitmapImage left="0" right="0" bottom="0" fillMode="repeat" source="{style('notification','break')}"/>
	<s:RichEditableText editable="false"  selectable="false" color="0xE8E8E8" fontSize="11" text="{_notification.text}" left="22" top="8" width="210" textAlign="center"/>
	<s:HGroup left="43" bottom="4" id="requestGroup" visible="{_hasControls}">
		<components:CustomSkinableButton id="okButton"  width="97" height="22"
										 skinClass="ru.teachbase.skins.CustomSkinableButtonSkin" color='0xE8E8E8'
										 initialize="with(okButton){iconUp=style('users','deleteUserCancelBg');iconOver=style('users','deleteUserCancelBgHover');}"
                                         label="{_notification.submitLabel}"
                                         click="_notification.submitFunction(); deleteMe();"
										 >
			</components:CustomSkinableButton>
		<components:CustomSkinableButton id="cancelButton"  width="87" height="22"
										 skinClass="ru.teachbase.skins.CustomSkinableButtonSkin"  color='0xE8E8E8'
										 initialize="with(cancelButton){iconUp=style('users','deleteUserCancelBg'); iconOver=style('users','deleteUserCancelBgHover');}"
                                         label="{_notification.cancelLabel}"
                                         click="_notification.cancelFunction &amp;&amp; _notification.cancelFunction(); deleteMe();"
										 >
			</components:CustomSkinableButton>
	</s:HGroup>
</s:ItemRenderer>
