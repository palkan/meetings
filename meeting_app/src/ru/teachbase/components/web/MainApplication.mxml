<?xml version="1.0" encoding="utf-8"?>

<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         creationComplete="controller.setView(this);controller.initialize()"
         minWidth="1000" minHeight="600">
    <fx:Script>
		<![CDATA[
        import mx.collections.ArrayList;
        import mx.graphics.BitmapFillMode;

        import ru.teachbase.components.LightboxContainer;
        import ru.teachbase.components.RTMPMonitor;
        import ru.teachbase.components.header.Header;
        import ru.teachbase.components.module.ModuleContainer;
        import ru.teachbase.components.notifications.Notification;
        import ru.teachbase.components.notifications.NotificationContainer;
        import ru.teachbase.controller.ApiClient;
        import ru.teachbase.controller.ApplicationController;
        import ru.teachbase.model.App;
        import ru.teachbase.utils.shortcuts.style;

        import spark.components.Label;

        import spark.primitives.BitmapImage;

        private const _controller:ApplicationController = new ApplicationController();
        private const _api:ApiClient = new ApiClient();

        private var _container:ModuleContainer;
        private var _header:Header;
        protected var _notifications:NotificationContainer;

        protected var _lightbox:LightboxContainer;

        //TEMP!

        private var _monitor:RTMPMonitor;

        public function draw():void {

            var background:BitmapImage = new BitmapImage();
            background.source = style('globalsettings', 'bgicon');
            background.left = background.right = background.top = background.bottom = 0;
            background.fillMode = BitmapFillMode.REPEAT;

            addElement(background);

            _container = new ModuleContainer();
            _container.left = _container.right = _container.bottom = 0;
            _container.top = 43;
            addElement(_container);

            _header = new Header();
            _header.left = _header.right = _header.top = 0;
            _header.height = 43;
            addElement(_header);


            _lightbox = new LightboxContainer();
            _lightbox.container = this;
            _lightbox.index = -2;
            _lightbox.percentHeight = 100;
            _lightbox.percentWidth = 100;
            _lightbox.setStyle('backgroundColor', 0x000000);
            _lightbox.setStyle('backgroundAlpha', .5);

            _monitor = new RTMPMonitor();

            _monitor.width = 300;
            _monitor.height = 150;
            _monitor.top = 43;
            _monitor.right = 14;
            _monitor.visible = false;

         //   _monitor.source = App.rtmpMedia.stats;

            addElement(_monitor);

            _notifications = new NotificationContainer();
            _notifications.top = 43;
            _notifications.right = 14;
            _notifications.dataProvider = new ArrayList();
            addElement(_notifications);
        }


        public function failed(message:String):void{

            removeAllElements();

            var _label:Label = new Label();

            _label.horizontalCenter = 0;
            _label.verticalCenter = 0;

            _label.text = message;

            addElement(_label);

        }


        public function notification(item:Notification):void {

            _notifications && _notifications.add(item);

        }

        public function get lightbox():LightboxContainer {
            return _lightbox;
        }

        public function get monitor():RTMPMonitor {
            return _monitor;
        }

        public function get controller():ApplicationController{
            return _controller;
        }


        ]]>
	</fx:Script>
</s:Group>
